apiVersion: v1
kind: Secret
metadata:
  name: cm-adapter-serving-certs
  namespace: default
data:
  serving.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZpVENDQTNHZ0F3SUJBZ0lVS1pzM0ZWTUoyeEI5bVFnYm1xUmpiK200WnpJd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1BURUxNQWtHQTFVRUJoTUNVMGN4Q3pBSkJnTlZCQWdNQWxOSE1SUXdFZ1lEVlFRS0RBdE5lVTl5Wnl3ZwpTVzVqTGpFTE1Ba0dBMVVFQXd3Q1kyRXdIaGNOTWpBeE1ESXpNVFExTkRVNVdoY05NakV4TURJek1UUTFORFU1CldqQkhNUXN3Q1FZRFZRUUdFd0pUUnpFTE1Ba0dBMVVFQ0F3Q1UwY3hGREFTQmdOVkJBb01DMDE1VDNKbkxDQkoKYm1NdU1SVXdFd1lEVlFRRERBeHRlV1J2YldGcGJpNWpiMjB3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQwpEd0F3Z2dJS0FvSUNBUUNXOXI0VGpTTk43MFVhZVJsVElPMmRPTVEvbEdzelhGemxLSGxKekg0THMySWhVSUtFCmJXYnYxZFRjQXAyUDlEaFZ0K04vUk9zSVRIZ1E4dU5yYWQwU2svcjYweGovRDJHNHlZMWhDNDg4bERRTDlJVnkKYXRQT2VYT0c4RkE4V2p5VytrUFh4a2t1dW9HcHRYSTJVNFJGYWFDcEF1SGUwNDNRSHZvbWVNOVZkT1RFaU1aRApzSEdERDNMNjd1OFlZdWlhRm1GbXhMb1NVQXRsK2w2dnhSQm1IamdZdzdZV0hWSnllUzkydVRtWlh3TldmMEdoCkFmVHpTRVNZRlFsbUgvNDZzTFI5VTNobGxzN0hEQXdaUEptNEluYWhROWN4ZGpyUXJpYWpaMjZFRjhnYk1rVFgKWWx0UGNyUllhMEZXNlcwQXVWa0p4eHRWNkxJRDdnMHV5QUpDQzhtb1VsbzVrSk43ZXRCN040ZE84aTQxQjJKeQpFcjYvcmZVbWlyK1VqOEZCRXhSY1g3RW9LblhJYyt0azdHVk8weFAwRS9pMGExZ2MvR1hlcGZyanpLcEpLNktuCkp6Sy8vbDNkdDVLbDFUeTFMYXYxU0k5SjZWRVdhVVViSEJpejUreDNMUHoxdDdhQ28wVXU4NVBEZzRhZzBJbUMKTUhpVU9sSXR2cEJibXVSOFd6TjhWNjRWb0k0dUZTbVVPenhlV2ROQmdSelVyOGc5bUpMaW5HWUZzQlBFenBIdAo0U28rWFZtNE1GTTNsR0w4QXdZZTBxdmFHR3lLZ29hRitzWitHRU5HaUNoOEFYeUU5UVdyeWNJbHNrVTExM2RoCmk5N2k4MHEwRXMyNnlJSjRWKzloNGduSWc1c291NWxVRTZzRWl6UWpKOTJuWng3QTAvakJiRVJFWVFJREFRQUIKbzNjd2RUQnpCZ05WSFJFRWJEQnFnaXh3Y205dFpYUm9aWFZ6TFdGa1lYQjBaWEl1WkdWbVlYVnNkQzV6ZG1NdQpZMngxYzNSbGNpNXNiMk5oYklJZWNISnZiV1YwYUdWMWN5MWhaR0Z3ZEdWeUxtUmxabUYxYkhRdWMzWmpnaHB3CmNtOXRaWFJvWlhWekxXRmtZWEIwWlhJdVpHVm1ZWFZzZERBTkJna3Foa2lHOXcwQkFRd0ZBQU9DQWdFQUVkRmYKWkVGaVdwai9Ib1VJd0tLNyt1eW82MkdVMlJrR0I5eU9OWVpFQTJTVHpnTVl5SnZUUmdNcEJIdzByLzhaVGdKeAppTTFYV1prYzlzYnRyZ2Jna3hCaEtsSkk3WitFeVh4MEo3eW83b1FPUUJsYXVTVFpNbW0xVE1pRlhFUllIYUJvCjE2cVZKdS9QWGNmRzBsTDZkN0hYWmtIdm5FNlFseXhiS1FZdThvMEpWdFZtVEFPNWxYNVZkSUhXTkRRUk9hRUIKMnpvQmM1Sm1qQThXNE9BM1o4eXpXYU5PTldzWDBBWjlIcDBMdEJ0S05zS0NHRDA0WDlnS3A0M000aTZxazArSQpOQVByUDJoMnNOcG5ESlBRc1YzcnFCcGdCVWxxNEdTYTFFSGFFbXYycEYwYXlmRng4cFAvaWUzSC9iUjdnZ0ZwCnhSNERSamZUcUhoa254enNzTTlXK1l1Sk1WUjNoamhkQXpmWm5CNVgzU1BJWDFrS3AyZWRLMExTSnhBRmE3bFAKZnlDVmFBcXNLb1dzVG9lVDM2amVYdjlyTDFNa2M4a3BJZktURWZwU3BJVGNsUDVYdnY5TURtNk52djU1ZXF5YwpGNUhLMCtuYnI5d0dFMUNJUFBlR3FxYUN0UG1NaytnZjFLcUd2NEdIQkxqbVorTytmSktqTWxkMjRETW1Tam8rCmNpRHFtazROZkhsWTdRQ0UrVGs5bXdwUlArU0ZGL2ZVQllpZGFLbXlRbXp4c0xvVk5vN0VpOHMzOHdDSGVMWG4KYkZjMHV3TkZpT0YwM3pBY0t5YnlwRE8wSmFmcVVHaGFZcUlUdDNpYm10bHhzU3R6cE40cUF1amltTHNtbmJvdgpCTUNGTzk1ZFI3UDRuMDdudE0wa0FmTUpIcHdwODlwTks1L1FaZW89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  serving.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS0FJQkFBS0NBZ0VBbHZhK0U0MGpUZTlGR25rWlV5RHRuVGpFUDVSck0xeGM1U2g1U2N4K0M3TmlJVkNDCmhHMW03OVhVM0FLZGovUTRWYmZqZjBUckNFeDRFUExqYTJuZEVwUDYrdE1ZL3c5aHVNbU5ZUXVQUEpRMEMvU0YKY21yVHpubHpodkJRUEZvOGx2cEQxOFpKTHJxQnFiVnlObE9FUldtZ3FRTGgzdE9OMEI3NkpualBWWFRreElqRwpRN0J4Z3c5eSt1N3ZHR0xvbWhaaFpzUzZFbEFMWmZwZXI4VVFaaDQ0R01PMkZoMVNjbmt2ZHJrNW1WOERWbjlCCm9RSDA4MGhFbUJVSlpoLytPckMwZlZONFpaYk94d3dNR1R5WnVDSjJvVVBYTVhZNjBLNG1vMmR1aEJmSUd6SkUKMTJKYlQzSzBXR3RCVnVsdEFMbFpDY2NiVmVpeUErNE5Mc2dDUWd2SnFGSmFPWkNUZTNyUWV6ZUhUdkl1TlFkaQpjaEsrdjYzMUpvcS9sSS9CUVJNVVhGK3hLQ3AxeUhQclpPeGxUdE1UOUJQNHRHdFlIUHhsM3FYNjQ4eXFTU3VpCnB5Y3l2LzVkM2JlU3BkVTh0UzJyOVVpUFNlbFJGbWxGR3h3WXMrZnNkeXo4OWJlMmdxTkZMdk9UdzRPR29OQ0oKZ2pCNGxEcFNMYjZRVzVya2ZGc3pmRmV1RmFDT0xoVXBsRHM4WGxuVFFZRWMxSy9JUFppUzRweG1CYkFUeE02Ugo3ZUVxUGwxWnVEQlRONVJpL0FNR0h0S3IyaGhzaW9LR2hmckdmaGhEUm9nb2ZBRjhoUFVGcThuQ0piSkZOZGQzCllZdmU0dk5LdEJMTnVzaUNlRmZ2WWVJSnlJT2JLTHVaVkJPckJJczBJeWZkcDJjZXdOUDR3V3hFUkdFQ0F3RUEKQVFLQ0FnRUFnU3c5OWlMRk83RnBrcjVlRWdoUjZUNmloYmlzaGJVWmM2ZlBLSHVHdXVKU0xDbGtsSVc4RjZvRApTZ0llNmdkUmtOOFpGVlJXTzdLYTVmMis1TEVmemY2N09aWVpoRjJZQTNMS3UyZ1Z0d01sQ2JtLzJlaFl0Z3FyCjlLRjZOam9NTUMrU2ozWUdOcXExdWc0YzNTbFhPOEduREJjQVNCY0MrRHNaVm9QMi9LdForR1VFS1BVNEc2bkQKZTcybzdsZnJxYlZPd0kzQ25WcktkZ2Jtc0VYUncxOUdKc0tIOHFKQ1l0c1k1dUNVell4RUllWWZ0UElrczJwNQo3eHZKQUE2T0RaQVgwRWowOHhBNGZJN3RaMGE0VFp1SG9IT1pGYVNSck8vbTlkalI4c3NhbVZMSkh2YjFKS1VFCmRjZklqK0tLTjUxZzk0SGIvUVZ3RlBiRFp1MFRLRG5ZVjlySllHcURkbWYvQVVzSW1DSVZ3c2kyMTNER01zK0oKVnFmYUVPYnFyMS8rSlVvQStlTkpBa2cySTA4bVcyZGdiaWJKVmdBQUcvWjREY3JNc2xjRFFOWHFpOHJWTGh3NQpjL1pZZzQrY3BoYnNrVHZQTDR3NThhcGNhUEEzZGpOTmlJLzkzeWVHd3VRYjlsNmVzWjNtWk5TMDIxNEI2TTdlCk5mMEVBaVBYdWVpcVdHT09ib0VBdk9NbWo1K1I3bGJXb0g5bTg4UFd3dWlBdWF6ZmFlZjV5M0FBUVd2a0tnWXcKUzlnVDduR2hKQkxOTUVKbXg5ZU1ZLzIyRm0wZVVCWStNeGFKc2dpVi81Y09OeDhXRUZLbWQvejJ3Mjk5Q0laUwpKalRkQWNNRC9jcFphK1RydElvak83YWxMTUVTMWJtbERzU0FtSjJUcHg2S1hzbWhGd1VDZ2dFQkFNWDZvN2NMCnFsa1dmUllDdk5RaHJsZEEyQ3FOdmg0MlZ3Y1FkL2JoaG1GcDl2Sm1jVThUL1AzQzdnUVRLeVhzeEJqUlQxOEUKcFpTYkUvWjdCQjNJVGlvdUw3d3MxN1gyckxjSUc5YmZqandDdnp5Z29RR2lIRkJGUlpaREJMQWdjd0dRVlhRbQpjeXZWZGlzVHY3anpnVFdna1ZoTmJEaUVJejFucFVydXd0Qlh3V2RmSUlQUk9PdVpISDk2bUZWMzNOMXZ0QzRkCmh2L3JlLzZtVkU0QjlzWmxDeU1rWTNwVFU4aWdPVW03MG5RNFQ1YnlHUDNYYUlmaWJDT09rYlc1c3RwVjdVMVgKUnIzSWc1RXUzZHRqWTdrZzN0VWNyUlU0dW40Y2h5dlRkWkt5UHBXRXVQLzBud0hGZVFlZi9wdDZkY0lBa2ViMwpPZkJJZlpVZldld0ZBRk1DZ2dFQkFNTTB5bEJMdW1ZbU01RUp3cXVTa2cyTjE1U3kyTm8rYU5xZitiekZ2aFhrClZCNGdCTEZtNU9FVHoxZXlsNzlqSkh1c1FFM3lsc1lYNTU0RTM3SWxBS2IrRDQ5bzhuSTRpc20wT2t4WCt6ZG4KUkVJNldGREVYQVlISEFyNDFTajViTU5NL1Y4MEtkSWtTRWhmc2c5bklsbWZOdzdtVzBOOUU4SnJENW9hRG9sSgpkR3gwRDZkblR5aGxLcDdaS3NEdTlTTE1SVUVJQnRZMk5paFNhYWkxR0dObmpxYzAzeGtxVk1kSmFFcmJXWGZmCjBNWlZxakZBVEh3bFc5VEZua0c3ZUNoK0VTRUM2NEl6TGp6Z1c4VGVGUjEwUVNkaUpoeWM3Vis1eENWS2ZJRFQKRXozZ0tUaS8xQWFDR0RNc1hINSsrOEVBMzhNdTdSMDdIemlVUEhjYzRmc0NnZ0VBUHA5clRha1k5eGtQOC9obAp0a3Y1RTR4bFZBQ0YxSlNucm9wZEIvQ0tTeUh6aFBVMmZpYjZiV0pOVzJpY3kyQTdId2FHTHE0UG1oUDdtb21LCjRjak1RTGRmVGd4NUp3dWgwanQwWXVGUDRsZVVHaDlORG5FeXQ0bFIyNWZUVWNyUjFmckxyUFBFbG1icysrOUIKUThWeVozNGt1Mk95Q2FaeVp5Znp0dUlUS1VlNDIzUFJteUNBK3JUeHVMa1VtbVJScnBGNDB1VndJRjlpVjBoUgpmbU5NcGJDc2R5ODVjQ1lQYUhTVjZtYkl5UTVPenBaQnBYbVBqUHZuN005Wjg3dUxnVmlRdVZnVC9sQUFuZG5QClAyZ08wUzQramZhR0lTSlNpeldHNUN2OUVxdmk4L1NKZUJ6dWR1YjV3NW11Tll2azE3ckthOTVqcTBlaXdacXIKSE9id0ZRS0NBUUEwbytLKzNuMEltTnFsRFJYREFNYUVBekVVZDFwRkdEbGNZM0dNTjJMNE1sZUF2QytueTFDRApaYjB2TUFqOTRuVnZLRmM2N2VVOHpDdDRrR1htZTFYK3NscHQyT1l3YVJEOExhN2U4WWJjUE92S1ZFT0duRDBZCm53Z3Y2VVJLUldEUUZjM3B3MzVYbmRNa09USWlOelNyS0dWSGpsVWtFUEdvSndqUkRKL0k0OWNTZkFYUXBlcFIKd1Y1SjhkUTJyUG5NQlh2VGVwK2xXbjhtUm5zWnRLUThBaXdVNlF3VWxEYkNld2cxejRzRDZZWTZSZFdjYkhOegpzdnRkbUdFQjV0VVRUbE8rTERSb0t2Y1lFWVNOeFRtNmRLUXhRNlYxWjlnWFRWZ1lta3FTenRqTWdjdDc4emJ3Ci9sb2FTcWN5c1htZ1pXVHlGSkI2cG52WDNSbWxJVlBMQW9JQkFFei9LRU9SWDBSOU1VTUlRaU1RbmpUQmRldWoKQWo5WFVTV1lmZlUzZmZtWUFPR0FaMEwveXFRWno2WXN0b1Y2VUNScnduNm9TaDcrdUJtVGxiVXVRczVoQjJMbAo0S2dDdzFGZDEzTTF2ZWlZbFVudHd0Y0VDeXhDN0Q5L01BcnEvd0FrTGZCOEJPMjhFRDJHU0ZYWmo2SGZucDVpClJQR1dGSlN0eU5Ba2R1SFpBcjZpaEI5S0pIVWpwdVZvTVpnVlMyK1dJRzJQTC90NGEvYnZYTXQrSk5yQXRaNGkKYVhGN2M5RlZla0VSdy9MZUhtazVTREc0cU16Z1Z4QzdlT0Jqa2RnV045SnRZQnA3RVN6RExLLzJkanAwSllOYwpTVWprS25TYnRET0oyRGg1YnFTREVoc01oc1hSWjZON3o4bUtWeU9HMmZsdEUzUjJjZ1k5NUlLR0FzTT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: custom-metrics-apiserver
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-server-resources
rules:
- apiGroups:
  - custom.metrics.k8s.io
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: custom-metrics-resource-reader
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - services
  - nodes
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics:system:auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: custom-metrics-apiserver
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: custom-metrics-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: custom-metrics-apiserver
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: custom-metrics-resource-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: custom-metrics-resource-reader
subjects:
- kind: ServiceAccount
  name: custom-metrics-apiserver
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: default
data:
  config.yaml: |
    rules:
    - seriesQuery: '{__name__=~"^collectd_kmb_vpu_gauge$"}'
      resources:
        overrides:
          instance:
            resource: node
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
          service: {resource: "service"}
      name:
        matches: "collectd_kmb_vpu_gauge"
        as: "collectd_kmb_vpu"
      metricsQuery: <<.Series>>{<<.LabelMatchers>>}
    - seriesQuery: '{__name__=~"^collectd_kmb_codec_gauge$"}'
      resources:
        overrides:
          instance:
            resource: node
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
          service: {resource: "service"}
      name:
        matches: "collectd_kmb_codec_gauge"
        as: "collectd_kmb_codec"
      metricsQuery: <<.Series>>{<<.LabelMatchers>>}
---
apiVersion: apiregistration.k8s.io/v1beta1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: prometheus-adapter
    namespace: default
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: false
  groupPriorityMinimum: 100
  versionPriority: 100
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZXekNDQTBPZ0F3SUJBZ0lVQjJVRUF2UGpUbHpubWhnNmN2NlJFdnhJM2Nzd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1BURUxNQWtHQTFVRUJoTUNVMGN4Q3pBSkJnTlZCQWdNQWxOSE1SUXdFZ1lEVlFRS0RBdE5lVTl5Wnl3ZwpTVzVqTGpFTE1Ba0dBMVVFQXd3Q1kyRXdIaGNOTWpBeE1ESXpNVFExTkRVNVdoY05NakV4TURJek1UUTFORFU1CldqQTlNUXN3Q1FZRFZRUUdFd0pUUnpFTE1Ba0dBMVVFQ0F3Q1UwY3hGREFTQmdOVkJBb01DMDE1VDNKbkxDQkoKYm1NdU1Rc3dDUVlEVlFRRERBSmpZVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQgpBS0JUSVdDS2hYWUszcXhsa0MxOFA3Mi9hc1oySjJzWCs4WHpmTHhveWdpNGZHR2tES01wYU1BRE9zTHpxZTBWCkduaGlxWjVSRlg3YWlUWFdBL0d3ZmUyVmE3WWZ2dFh2M1Bxc3BXMDNaMnZmQjFzUGRrOTQ4OG5sbm44WjI1VjcKL2I2RXdLelFKRDZKdUNrUEJiWCtSanR1V3M5NWYrL1Nxc3dDM01vVERiOGtCcE45MldRNDRBd0d0YlRzOWJ6eApKRjk3czIxR2xncGdVRlJ5Y1U0eHM2elRaSVErN1dud2FYRUpOQ3pvbjl0ZjNYRDBPZ1pKQTkrN05ya3d6WTRBCnphYjlCdTZ4T0lNdEhhYkJyTmZJSXVsbCtjVExGVklWT2R4U0RiUllzdlpJaW03VU9kVzBhM1BXNWgyeDhLdk4KMVpFcVQ2UlB5Y3ppSzIvYVVEL1pJMmlvVTZYQW9aNjVxQVByQUtEaVV1d1RJY214VEMrdDhZZTBOWFlTNnRjSQptc09JcllzdGNva3VsSk5YNTVYQnRuZzd4Wkp5TDNoeXQ3d0dXcCswbG4zcDFmNUlxSlJtWENwTy8veWRIdml1CnlLR3lhUjN3c01qMmlDamo4MHRhUmJRRm0xb200WThDakZDbnRnUU5WVlp0M1ZJVFN4aVAvYnRMNGh2dnpyREsKNWVjOWlsQldEY3IvUjhPcXUwNTZUWUFqMlFRYUYvWk1XREFsbkRSb2Z5RW5QYnhCOVRsaHJwZ253ZTFrM21wSwo4U1VVLzBjMFkwbUxSWXptQWdUL2cwaDc2RmZjM3pGZENWUDhaQjJUMlZLNEpCT25CemhwS0hvdzNwQnltdWRGClpiU2NLRTk5ZnMrN1JSK01ER2ZvalBCZVA4ck9oQ01DbGw1TlFtdytkQ0UzQWdNQkFBR2pVekJSTUIwR0ExVWQKRGdRV0JCUVBWS1FqNGY4dHJCQTRsVkVRVytEcytFK3kzekFmQmdOVkhTTUVHREFXZ0JRUFZLUWo0Zjh0ckJBNApsVkVRVytEcytFK3kzekFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCREFVQUE0SUNBUUJFCjdWY1Y1TmUxNXJCSDVZTmFJRTAvZlAzWnU1STJ0Y3NjY0xvcGVkdWdMck1RdnI3UWRFNWRicVM4cUdMNDFBbDkKU2pMUFJGdlArdURpSVdzWXBlZi82K0Z5ODhGeVBiNFVSMVZ3bHBUUnhvejVXNGM3bnU4MURNb0xOQko4SlR4UQpXVWxtakpKUHFuUnN4STRYb0pmSVFDUnhEZ2NPMk1ZRFBVQVZXeU9XanlNbDJLai9DRE50M2RZWTdiTVVoYXo1Cjl4eDFhUXlYdjNzMG1DbnBjUWY4YmlnVHFxbDNZbkVRclJHL05GcStJWG9MZGtLNUovcndEM2FaWnBHKzlseC8KMXV4ZG1INGkwdWFNNkdzMXJ2UnFZc1REdXdXdVVVbUZPd0VLRC84MWVPbEVKSFRiZEYvbWJkWkMyREhqVnQ4SwpscEpURWlFbTFqTG9GZVlnNEg4UFFIajFaeGhxWFl2bmFnMmtIYUt5bkhhcVZuRVk5UlhsWVBrZnhENVVsTWdMCk9zRUtveGJOT2x3RWVWSXJjZzB2bTRTZE00TklTNHJrU2ZPQUwzdXFIS3F2MlJFNDlEQloxSi9lbDlpdkpNS2EKWGFOYnlteWZVVzQ5eDcvYS92aTlCeitXeXdwcXRGWnVhTXpwRmkzc0lXbjN5ZEJXZ2xtTFJmdmRmTUFqOWUzUQpjeC9IeWtvenJ0UW0rZllXQkpSZUJMSUhWRXJERGV3UFViR0lEdm5DRmNERUZvaExMcjAvdjlibU5JcnBxY1AyCjQra204MzVRSHFNSG1iT1doTXlIanlOdjhKK2RMeTFzMUNHdG5qNDRMakkvcDFVS3RYc3RRRWJxTVRtaU5DNTAKVHdpZDJqUTcrWVcyeTRmbjA5b2hFTFBwNHFaMytRU2QvbW5HVVZpTTFBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: prometheus-adapter
  name: prometheus-adapter
  namespace: default
spec:
  ports:
  - name: https
    port: 443
    targetPort: 6443
  selector:
    name: prometheus-adapter
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-adapter
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      name: prometheus-adapter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        name: prometheus-adapter
    spec:
      serviceAccountName: custom-metrics-apiserver
      containers:
      - args:
        - --tls-cert-file=/var/run/serving-cert/serving.crt
        - --tls-private-key-file=/var/run/serving-cert/serving.key
        - --config=/etc/adapter/config.yaml
        - --logtostderr=true
        #- --v=8
        - --metrics-relist-interval=1m
        - --prometheus-url=https://prometheus-svc.default.svc:9090/
        - --prometheus-ca-file=/etc/prometheus-server/ca.crt
        - --prometheus-token-file=/etc/prometheus-server/token
        - --secure-port=6443
        image: directxman12/k8s-prometheus-adapter:v0.7.0
        name: prometheus-adapter
        ports:
        - containerPort: 6443
        volumeMounts:
        - mountPath: /tmp
          name: tmpfs
          readOnly: false
        - mountPath: /var/run/serving-cert
          name: volume-serving-cert
          readOnly: True
        - mountPath: /etc/adapter
          name: config
          readOnly: false
        - mountPath: /etc/prometheus-server
          name: prometheus-keys
      volumes:
      - emptyDir: {}
        name: tmpfs
      - name: volume-serving-cert
        secret:
          secretName: cm-adapter-serving-certs
      - configMap:
          name: adapter-config
        name: config
      - name: prometheus-keys
        secret:
          secretName: prometheus-certs
